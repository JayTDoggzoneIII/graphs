#include <bits/stdc++.h>

using namespace std;

void FU(vector< vector<int> >&a, int n)
{
    for (int k = 0;k<n;k+=1)
        for (int i = 0;i<n;i+=1)
            for (int j = 0;j<n;j+=1)
                a[i][j] = (a[i][j] < (a[i][k] + a[k][j])) ? a[i][j] : a[i][k] + a[k][j];
}

/*
-a - матрица весов.
 n - размерность матрицы n*n;
-Граф хранить в виде матрицы.
 a[i][j]-ый элемент означает -> из i в j за цену a[i][j], 
 цена равная INF означает, что нет пути из i в j.
-После вызова функции FU изначальная матрица становится матрицей с кратчайшими длинами от каждой до каждой, 
 причем если пути нету то на месте длины пути будет константа INF.
-Нумерация с 0.
(Алгоритм Флойда - Уоршелла)
*/